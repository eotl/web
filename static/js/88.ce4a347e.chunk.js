(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{464:function(e,t,l){"use strict";l.r(t),l.d(t,"default",function(){return h}),l.d(t,"frontMatter",function(){return p}),l.d(t,"jsx",function(){return u});var a=l(7),n=l(8),o=l(10),s=l(9),r=l(11),i=l(0),c=l.n(i),m=(l(104),l(593)),p={wikiWrapper:"TextArticle",path:void 0},u=c.a.createElement("div",null,c.a.createElement("p",null,"Command: Tell. Format:  tell <player> <message> Example: tell zippo wah, the mud is broke!"),c.a.createElement("p",null,"     The tell command is used to send a message across the mud to other players currently on the mud or to people on other muds.  Valid syntax follows:"),c.a.createElement("p",null,"tell <what> <message> This will send the message to the specified person/people. What can be any of the following:"),c.a.createElement("p",null,"  -<category> sends a tell to everyone in <category> if it is one of your notification categories."),c.a.createElement("p",null,"  :<rclist> tells to everyone on the specified rclist. Go into the mailer and type 'list' to get a list of the rclists."),c.a.createElement("p",null,"  . tells to whoever you last sent a tell to. This can be one person or a group of people."),c.a.createElement("p",null,"  <person> send a tell to person."),c.a.createElement("p",null,"  <person>@<mud> send an intermud tell to person at mud."),c.a.createElement("p",null,"  Any one or combination of these can be used.  When more than one group is selected, a comma ',' must be used to seperate them."),c.a.createElement("p",null,"  Example:",c.a.createElement("br",null),"tell bob, ., :eternal, -friends hi"),c.a.createElement("p",null,"      This would tell bob, the group you last sent a tell to, everyone in the eternal cabal and everyone in your friends notification list."),c.a.createElement("p",null,'  It is not necessary to have a space after each comma. All exclaimation marks and spaces will be ignored if in the <what> section of the tell. Capitalization is ignored in the <what> portion of the tell. "BOB" is the same as "bob".'),c.a.createElement("p",null,"tell /last (num) This will display the last tell you recieved. The optional argument will display the last num tells up to the max of 20.  This setting is saved.  Example: If you did tell /last 10, the next time you did tell /last it would display the last 10 tells."),c.a.createElement("p",null,"tell /last (name) This will show you all the tells in your history that came from name."),c.a.createElement("p",null,"tell /last (regexp) This will do a regexp search through your last 20 tells for regexp."),c.a.createElement("p",null,"tell /hist This will display the last 20 tells."),c.a.createElement("p",null,"-Tyrus"),c.a.createElement("p",null,"See also: reply, say, whisper.")),h=function(e){function t(){return Object(a.a)(this,t),Object(o.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(r.a)(t,e),Object(n.a)(t,[{key:"render",value:function(){var e=this.props;return c.a.createElement(m.a,Object.assign({},e,{frontMatter:p}),c.a.createElement("div",null,c.a.createElement("p",null,"Command: Tell. Format:  tell <player> <message> Example: tell zippo wah, the mud is broke!"),c.a.createElement("p",null,"     The tell command is used to send a message across the mud to other players currently on the mud or to people on other muds.  Valid syntax follows:"),c.a.createElement("p",null,"tell <what> <message> This will send the message to the specified person/people. What can be any of the following:"),c.a.createElement("p",null,"  -<category> sends a tell to everyone in <category> if it is one of your notification categories."),c.a.createElement("p",null,"  :<rclist> tells to everyone on the specified rclist. Go into the mailer and type 'list' to get a list of the rclists."),c.a.createElement("p",null,"  . tells to whoever you last sent a tell to. This can be one person or a group of people."),c.a.createElement("p",null,"  <person> send a tell to person."),c.a.createElement("p",null,"  <person>@<mud> send an intermud tell to person at mud."),c.a.createElement("p",null,"  Any one or combination of these can be used.  When more than one group is selected, a comma ',' must be used to seperate them."),c.a.createElement("p",null,"  Example:",c.a.createElement("br",null),"tell bob, ., :eternal, -friends hi"),c.a.createElement("p",null,"      This would tell bob, the group you last sent a tell to, everyone in the eternal cabal and everyone in your friends notification list."),c.a.createElement("p",null,'  It is not necessary to have a space after each comma. All exclaimation marks and spaces will be ignored if in the <what> section of the tell. Capitalization is ignored in the <what> portion of the tell. "BOB" is the same as "bob".'),c.a.createElement("p",null,"tell /last (num) This will display the last tell you recieved. The optional argument will display the last num tells up to the max of 20.  This setting is saved.  Example: If you did tell /last 10, the next time you did tell /last it would display the last 10 tells."),c.a.createElement("p",null,"tell /last (name) This will show you all the tells in your history that came from name."),c.a.createElement("p",null,"tell /last (regexp) This will do a regexp search through your last 20 tells for regexp."),c.a.createElement("p",null,"tell /hist This will display the last 20 tells."),c.a.createElement("p",null,"-Tyrus"),c.a.createElement("p",null,"See also: reply, say, whisper.")))}}]),t}(c.a.PureComponent)},591:function(e,t,l){"use strict";var a=l(27);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=a(l(0)),o=(0,a(l(30)).default)(n.default.createElement(n.default.Fragment,null,n.default.createElement("path",{fill:"none",d:"M0 0h24v24H0V0z"}),n.default.createElement("path",{d:"M5 18.08V19h.92l9.06-9.06-.92-.92z",opacity:".3"}),n.default.createElement("path",{d:"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06.92.92L5.92 19zM20.71 5.63l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41z"})),"CreateTwoTone");t.default=o},593:function(e,t,l){"use strict";var a,n=l(7),o=l(8),s=l(10),r=l(9),i=l(11),c=l(0),m=l.n(c),p=l(594),u=l(22),h=l.n(u),d=l(48),y=l.n(d),f=l(37),E=l.n(f),w=l(36),b=l.n(w),g=l(591),v=l.n(g),T=l(12),x=l(105),k=l(32),O=Object(T.withStyles)(k.a,{withTheme:!0})(a=function(e){function t(){return Object(n.a)(this,t),Object(s.a)(this,Object(r.a)(t).apply(this,arguments))}return Object(i.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){var e=this.props,t=e.path,l=e.toggleWikiDrawer,a=e.wikiDrawerOpen,n=e.markdown,o=e.classes;return m.a.createElement("div",null,m.a.createElement(x.a,{path:t,markdown:n,toggle:l,open:a}),m.a.createElement(b.a,{className:o.sectionDivider}),m.a.createElement(h.a,{variant:"body1",component:"section"},m.a.createElement("pre",{className:o.textSection},this.props.children)),m.a.createElement("br",null),m.a.createElement(E.a,null,m.a.createElement(y.a,{container:!0,spacing:16},m.a.createElement(y.a,{item:!0},m.a.createElement(v.a,{className:o.createIcon})),m.a.createElement(y.a,{item:!0,xs:12,sm:!0},m.a.createElement(h.a,{variant:"subtitle1"},"This article was written in plain text, most likely copied from the MUD. You can help EotL by ",m.a.createElement(p.a,{to:"/wiki/"},"converting it")," to Markdown.")))))}}]),t}(c.Component))||a;t.a=O}}]);
//# sourceMappingURL=88.ce4a347e.chunk.js.map