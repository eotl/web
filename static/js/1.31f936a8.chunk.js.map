{"version":3,"sources":["md/wiki/commands/alias.md","../node_modules/@material-ui/icons/CreateTwoTone.js","js/components/wiki/TextArticle.js"],"names":["frontMatter","path","undefined","jsx","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","MarkdownReact","props","this","_js_components_wiki_TextArticle__WEBPACK_IMPORTED_MODULE_6__","Object","assign","React","PureComponent","_interopRequireDefault","__webpack_require__","defineProperty","exports","value","default","_react","_default","Fragment","fill","d","opacity","TextArticle","withStyles","styles","withTheme","_this$props","toggleWikiDrawer","wikiDrawerOpen","markdown","classes","_ArticleHeader__WEBPACK_IMPORTED_MODULE_13__","toggle","open","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_10___default","className","sectionDivider","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_7___default","variant","component","textSection","children","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_8___default","container","spacing","item","_material_ui_icons_CreateTwoTone__WEBPACK_IMPORTED_MODULE_11___default","createIcon","xs","sm","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","Component"],"mappings":"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","file":"static/js/1.31f936a8.chunk.js","sourcesContent":["\n    /*---\nwrapper: \"../../../js/components/wiki/TextArticle\"\n---*/\n    import React from 'react';\n    import { Link } from 'react-router-dom'\nimport Wrapper from '../../../js/components/wiki/TextArticle';\n\n    const frontMatter = {\n\tpath: undefined\n};\n    const props = { };\n    const jsx = <div><p>Command: Alias.\nFormat:  alias &lt;command&gt; &lt;command list&gt;\nalias &lt;option&gt; &lt;arg&gt;\nExample: alias km kill monster\nalias kp kill $n</p>\n<p>     An alias is a shortened verson of a command, usually one you use\noften.  When you type the alias and press return, the longer command is\nexecuted.  An alias consists of two parts, as in the format above:\nthe command, and the command list that the alias is associated with.</p>\n<p>     EotL defines some aliases for you when you create a new character.\nTyping &lt;alias&gt; by itself will show you these, plus any other aliases\nyou have defined yourself.  Pre-defined aliases are marked with a plus (+).</p>\n<p>-- Adding an alias:</p>\n<p>     To set your own aliases, follow the format shown above.  Aliases\ncan only execute one command each.</p>\n<p>     In the second example above, a $n is used.  These command line\narguments are denoted by '$n' where 'n' is the numbers 1 through 9,\nor an asterix (<em>).  They represent the following:\n$1   -   the first argument.\n$2   -   the second argument, etc.\n$</em>   -   the remaining arguments not used by the '$n' format.\n$0   -   all off the arguments, regardless of previous use.</p>\n<p>     Example : alias kp kill $1\ncommand : kp guest\nThus    : kill guest</p>\n<p>The following two examples show the difference between $* and $0 :</p>\n<p>     Example : alias talk say $1 $2 $3 $*\nCommand : talk a b c d e f g\nThus    : say a b c d e f g</p>\n<p>     Example: alias talk say $1 $2 $3 $0\nCommand: talk a b c d e f g\nThus    : say a b c a b c d e f g</p>\n<p>-- Checking an alias.</p>\n<p>     You can check what an alias is defined to be by typing alias &lt;command&gt;.</p>\n<p>     For example:\nIf you had 'hi' aliased to 'say hi', typing 'alias hi' would\nresult in the message: 'hi' aliased to: say hi</p>\n<p>     You can also list all the aliases with an expression in them.\nTyping 'alias -a hi' would list all the aliases with hi in them.\n<br />\n-- Checking an alias for an expression\n<br />\nThere are two ways that you can check your list of aliases for the\noccurrence of a certain expression.  The -a option will check the names\nof your aliases for a certain expression, while alias -k will check\nthe actual alias itself.</p>\n<p>     For example:</p>\n<p>          If you have the following aliases defined:\nalias cha channel auction\nalias chg channel gossip\nalias kch kill chester\nalias kc  kill copland\n<br />\nalias -a ch would return the first three while\nalias -k kill would only return the last two.\n<br />\nSee also: unalias, clearaliases, expand.</p></div>;\n    export default class MarkdownReact extends React.PureComponent {\n      render() {\n        const props = this.props;\n        return <Wrapper {...props} frontMatter={frontMatter}><div><p>Command: Alias.\nFormat:  alias &lt;command&gt; &lt;command list&gt;\nalias &lt;option&gt; &lt;arg&gt;\nExample: alias km kill monster\nalias kp kill $n</p>\n<p>     An alias is a shortened verson of a command, usually one you use\noften.  When you type the alias and press return, the longer command is\nexecuted.  An alias consists of two parts, as in the format above:\nthe command, and the command list that the alias is associated with.</p>\n<p>     EotL defines some aliases for you when you create a new character.\nTyping &lt;alias&gt; by itself will show you these, plus any other aliases\nyou have defined yourself.  Pre-defined aliases are marked with a plus (+).</p>\n<p>-- Adding an alias:</p>\n<p>     To set your own aliases, follow the format shown above.  Aliases\ncan only execute one command each.</p>\n<p>     In the second example above, a $n is used.  These command line\narguments are denoted by '$n' where 'n' is the numbers 1 through 9,\nor an asterix (<em>).  They represent the following:\n$1   -   the first argument.\n$2   -   the second argument, etc.\n$</em>   -   the remaining arguments not used by the '$n' format.\n$0   -   all off the arguments, regardless of previous use.</p>\n<p>     Example : alias kp kill $1\ncommand : kp guest\nThus    : kill guest</p>\n<p>The following two examples show the difference between $* and $0 :</p>\n<p>     Example : alias talk say $1 $2 $3 $*\nCommand : talk a b c d e f g\nThus    : say a b c d e f g</p>\n<p>     Example: alias talk say $1 $2 $3 $0\nCommand: talk a b c d e f g\nThus    : say a b c a b c d e f g</p>\n<p>-- Checking an alias.</p>\n<p>     You can check what an alias is defined to be by typing alias &lt;command&gt;.</p>\n<p>     For example:\nIf you had 'hi' aliased to 'say hi', typing 'alias hi' would\nresult in the message: 'hi' aliased to: say hi</p>\n<p>     You can also list all the aliases with an expression in them.\nTyping 'alias -a hi' would list all the aliases with hi in them.\n<br />\n-- Checking an alias for an expression\n<br />\nThere are two ways that you can check your list of aliases for the\noccurrence of a certain expression.  The -a option will check the names\nof your aliases for a certain expression, while alias -k will check\nthe actual alias itself.</p>\n<p>     For example:</p>\n<p>          If you have the following aliases defined:\nalias cha channel auction\nalias chg channel gossip\nalias kch kill chester\nalias kc  kill copland\n<br />\nalias -a ch would return the first three while\nalias -k kill would only return the last two.\n<br />\nSee also: unalias, clearaliases, expand.</p></div></Wrapper>;\n      }\n    };\n    export { frontMatter, jsx };\n  ","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M5 18.08V19h.92l9.06-9.06-.92-.92z\",\n  opacity: \".3\"\n}), _react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06.92.92L5.92 19zM20.71 5.63l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41z\"\n})), 'CreateTwoTone');\n\nexports.default = _default;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CreateIcon from '@material-ui/icons/CreateTwoTone';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ArticleHeader from './ArticleHeader';\r\nimport styles from '../../styles/wiki';\r\n\r\n@withStyles(styles, { withTheme: true })\r\nclass TextArticle extends Component {\r\n  render() {\r\n    const { path, toggleWikiDrawer, wikiDrawerOpen, markdown, classes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <ArticleHeader \r\n          path={path} \r\n          markdown={markdown} \r\n          toggle={toggleWikiDrawer}\r\n          open={wikiDrawerOpen}\r\n        />\r\n        <Divider className={classes.sectionDivider}/>\r\n        <Typography variant=\"body1\" component=\"section\">\r\n          <pre className={classes.textSection}>\r\n            {this.props.children}\r\n          </pre>\r\n        </Typography>\r\n        <br/>\r\n        <Paper>\r\n          <Grid container spacing={16}>\r\n            <Grid item>\r\n              <CreateIcon className={classes.createIcon}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm>\r\n              <Typography variant=\"subtitle1\">\r\n                This article was written in plain text, most likely copied from the MUD.\r\n                You can help EotL by <Link to=\"/wiki/\">converting it</Link> to Markdown. \r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextArticle;\r\n"],"sourceRoot":""}