{"version":3,"sources":["md/wiki/commands/color.md","../node_modules/@material-ui/icons/CreateTwoTone.js","js/components/wiki/TextArticle.js"],"names":["frontMatter","wikiWrapper","path","undefined","jsx","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","MarkdownReact","props","this","WikiComponents_TextArticle__WEBPACK_IMPORTED_MODULE_6__","Object","assign","React","PureComponent","_interopRequireDefault","__webpack_require__","defineProperty","exports","value","default","_react","_default","Fragment","fill","d","opacity","TextArticle","withStyles","styles","withTheme","_this$props","toggleWikiDrawer","wikiDrawerOpen","markdown","classes","_ArticleHeader__WEBPACK_IMPORTED_MODULE_13__","toggle","open","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_10___default","className","sectionDivider","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_7___default","variant","component","textSection","children","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_8___default","container","spacing","item","_material_ui_icons_CreateTwoTone__WEBPACK_IMPORTED_MODULE_11___default","createIcon","xs","sm","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","Component"],"mappings":"wRAQUA,EAAc,CACvBC,YAAa,cACbC,UAAMC,GAGGC,EAAMC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sDAErBF,EAAAC,EAAAC,cAAA,6GAEAF,EAAAC,EAAAC,cAAA,gQAIAF,EAAAC,EAAAC,cAAA,uvBAYAF,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,2HAGAF,EAAAC,EAAAC,cAAA,kNAGAF,EAAAC,EAAAC,cAAA,6cAOAF,EAAAC,EAAAC,cAAA,gCACyBC,mLAEjB,IAAMC,EAAQC,KAAKD,MACnB,OAAOJ,EAAAC,EAAAC,cAACI,EAAA,EAADC,OAAAC,OAAA,GAAaJ,EAAb,CAAoBT,YAAaA,IAAaK,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sDAElEF,EAAAC,EAAAC,cAAA,6GAEAF,EAAAC,EAAAC,cAAA,gQAIAF,EAAAC,EAAAC,cAAA,uvBAYAF,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,2HAGAF,EAAAC,EAAAC,cAAA,kNAGAF,EAAAC,EAAAC,cAAA,6cAOAF,EAAAC,EAAAC,cAAA,wCAvC+CO,IAAMC,iDChDrD,IAAAC,EAA6BC,EAAQ,IAErCL,OAAAM,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAE,aAAA,EAEA,IAAAC,EAAAN,EAAoCC,EAAQ,IAI5CM,GAAA,EAFAP,EAA4CC,EAAQ,KAEpDI,SAAAC,EAAAD,QAAAd,cAAAe,EAAAD,QAAAG,SAAA,KAAAF,EAAAD,QAAAd,cAAA,QACAkB,KAAA,OACAC,EAAA,oBACCJ,EAAAD,QAAAd,cAAA,QACDmB,EAAA,qCACAC,QAAA,OACCL,EAAAD,QAAAd,cAAA,QACDmB,EAAA,8MACC,iBAEDP,EAAAE,QAAAE,uNCXMK,EADLC,qBAAWC,IAAQ,CAAEC,WAAW,uLAEtB,IAAAC,EAC+DtB,KAAKD,MAAnEP,EADD8B,EACC9B,KAAM+B,EADPD,EACOC,iBAAkBC,EADzBF,EACyBE,eAAgBC,EADzCH,EACyCG,SAAUC,EADnDJ,EACmDI,QAE1D,OACE/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CACEnC,KAAMA,EACNiC,SAAUA,EACVG,OAAQL,EACRM,KAAML,IAER7B,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAASmC,UAAWL,EAAQM,iBAC5BrC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYsC,QAAQ,QAAQC,UAAU,WACpCxC,EAAAC,EAAAC,cAAA,OAAKkC,UAAWL,EAAQU,aACrBpC,KAAKD,MAAMsC,WAGhB1C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,KACED,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAM4C,WAAS,EAACC,QAAS,IACvB9C,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAM8C,MAAI,GACR/C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAYmC,UAAWL,EAAQkB,cAEjCjD,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAM8C,MAAI,EAACG,GAAI,GAAIC,IAAE,GACnBnD,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYsC,QAAQ,aAApB,iGAEuBvC,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAMC,GAAG,UAAT,iBAFvB,4BAzBYC,iBAqCX/B","file":"static/js/19.c2476bab.chunk.js","sourcesContent":["\n    /*---\nwikiWrapper: TextArticle\n---*/\n    import React from 'react';\n    import { Link } from 'react-router-dom';\nimport Wrapper from 'WikiComponents/TextArticle';\n\n    const frontMatter = {\n\twikiWrapper: 'TextArticle',\n\tpath: undefined\n};\n    const props = { };\n    const jsx = <div><p>Command : Color\nFormat  : color &lt;options&gt;</p>\n<p>To set the default colors simply type 'color default'.\nTo list all colors set type 'color list'.</p>\n<p>To set the color that you would like for any of the commands that are\npossible to be colored (type 'color' to list these). Type 'color' followed by\nthe name of the command, followed by '&lt;opts&gt;' where &lt;opts&gt; can be one or more\nof the following:</p>\n<p>    off            -- Disable coloring of this command.\ndefault/norm   -- Sets the coloring for this command to normal.\ndefault2/norm2 -- Sets the coloring for this command to normal2.\nbeep           -- Adds a beep (^G) to this command.\nwhole          -- Colors the entire message instead of just the prefix.\nflash/blink    -- Causes this command to flash.\nbold           -- Causes this command to use high intensity colors.\nunderline      -- Uses the VT100 code for underlining for this command.\nreverse        -- Uses the VT100 code for reversing fore/backgrounds.\n&lt;fore&gt;         -- Sets the foreground color for this command to &lt;color&gt;.\n&lt;fore&gt;,&lt;back&gt;  -- Sets the foreground color to &lt;fore&gt; and the background\ncolor to &lt;back&gt; for this command.</p>\n<p>Valid colors for &lt;fore&gt; and &lt;back&gt; are:</p>\n<p>    black    red    green    yellow    blue    purple    cyan    white</p>\n<p>Some examples:</p>\n<p>    Example: color say cyan,black beep\nExample: color tell beep bold yellow\nExample: color shout flash reverse</p>\n<p>The order of the options does not matter, except that those you type first\nwill take precedence over the last ones, although there is no need to use\nconflicting options in the same command, bogleg.</p>\n<p>The commands tell, say, go, and shout can also have another form of coloring\nadded to them. This coloring involves adding a color in [] into the argument\nof the tell you send.\neg. tell mortal this color will be [red]red.\nTyping [RED] instead of [red] will make the color bold red instead of normal\nred. The color will work from anywhere in the tell except as the last thing.\n'set extra_color off' to stop others from sending you these extra colors.</p>\n<p>See also: hp, ansi</p></div>;\n    export default class MarkdownReact extends React.PureComponent {\n      render() {\n        const props = this.props;\n        return <Wrapper {...props} frontMatter={frontMatter}><div><p>Command : Color\nFormat  : color &lt;options&gt;</p>\n<p>To set the default colors simply type 'color default'.\nTo list all colors set type 'color list'.</p>\n<p>To set the color that you would like for any of the commands that are\npossible to be colored (type 'color' to list these). Type 'color' followed by\nthe name of the command, followed by '&lt;opts&gt;' where &lt;opts&gt; can be one or more\nof the following:</p>\n<p>    off            -- Disable coloring of this command.\ndefault/norm   -- Sets the coloring for this command to normal.\ndefault2/norm2 -- Sets the coloring for this command to normal2.\nbeep           -- Adds a beep (^G) to this command.\nwhole          -- Colors the entire message instead of just the prefix.\nflash/blink    -- Causes this command to flash.\nbold           -- Causes this command to use high intensity colors.\nunderline      -- Uses the VT100 code for underlining for this command.\nreverse        -- Uses the VT100 code for reversing fore/backgrounds.\n&lt;fore&gt;         -- Sets the foreground color for this command to &lt;color&gt;.\n&lt;fore&gt;,&lt;back&gt;  -- Sets the foreground color to &lt;fore&gt; and the background\ncolor to &lt;back&gt; for this command.</p>\n<p>Valid colors for &lt;fore&gt; and &lt;back&gt; are:</p>\n<p>    black    red    green    yellow    blue    purple    cyan    white</p>\n<p>Some examples:</p>\n<p>    Example: color say cyan,black beep\nExample: color tell beep bold yellow\nExample: color shout flash reverse</p>\n<p>The order of the options does not matter, except that those you type first\nwill take precedence over the last ones, although there is no need to use\nconflicting options in the same command, bogleg.</p>\n<p>The commands tell, say, go, and shout can also have another form of coloring\nadded to them. This coloring involves adding a color in [] into the argument\nof the tell you send.\neg. tell mortal this color will be [red]red.\nTyping [RED] instead of [red] will make the color bold red instead of normal\nred. The color will work from anywhere in the tell except as the last thing.\n'set extra_color off' to stop others from sending you these extra colors.</p>\n<p>See also: hp, ansi</p></div></Wrapper>;\n      }\n    };\n    export { frontMatter, jsx };\n  ","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M5 18.08V19h.92l9.06-9.06-.92-.92z\",\n  opacity: \".3\"\n}), _react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06.92.92L5.92 19zM20.71 5.63l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41z\"\n})), 'CreateTwoTone');\n\nexports.default = _default;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CreateIcon from '@material-ui/icons/CreateTwoTone';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ArticleHeader from './ArticleHeader';\r\nimport styles from '../../styles/wiki';\r\n\r\n@withStyles(styles, { withTheme: true })\r\nclass TextArticle extends Component {\r\n  render() {\r\n    const { path, toggleWikiDrawer, wikiDrawerOpen, markdown, classes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <ArticleHeader \r\n          path={path} \r\n          markdown={markdown} \r\n          toggle={toggleWikiDrawer}\r\n          open={wikiDrawerOpen}\r\n        />\r\n        <Divider className={classes.sectionDivider}/>\r\n        <Typography variant=\"body1\" component=\"section\">\r\n          <pre className={classes.textSection}>\r\n            {this.props.children}\r\n          </pre>\r\n        </Typography>\r\n        <br/>\r\n        <Paper>\r\n          <Grid container spacing={16}>\r\n            <Grid item>\r\n              <CreateIcon className={classes.createIcon}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm>\r\n              <Typography variant=\"subtitle1\">\r\n                This article was written in plain text, most likely copied from the MUD.\r\n                You can help EotL by <Link to=\"/wiki/\">converting it</Link> to Markdown. \r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextArticle;\r\n"],"sourceRoot":""}