{"version":3,"sources":["md/wiki/commands/sub.md","../node_modules/@material-ui/icons/CreateTwoTone.js","js/components/wiki/TextArticle.js"],"names":["frontMatter","wikiWrapper","path","undefined","jsx","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","MarkdownReact","props","this","WikiComponents_TextArticle__WEBPACK_IMPORTED_MODULE_7__","Object","assign","React","PureComponent","_interopRequireDefault","__webpack_require__","defineProperty","exports","value","default","_react","_default","Fragment","fill","d","opacity","TextArticle","withStyles","styles","withTheme","_this$props","toggleWikiDrawer","wikiDrawerOpen","markdown","classes","_ArticleHeader__WEBPACK_IMPORTED_MODULE_13__","toggle","open","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_10___default","className","sectionDivider","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_7___default","variant","component","textSection","children","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_8___default","container","spacing","item","_material_ui_icons_CreateTwoTone__WEBPACK_IMPORTED_MODULE_11___default","createIcon","xs","sm","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","Component"],"mappings":"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","file":"static/js/86.d89f4aa1.chunk.js","sourcesContent":["\n    /*---\nwikiWrapper: TextArticle\n---*/\n    import React from 'react';\n    import { Link } from 'react-router-dom';\nimport Spoiler from 'Containers/Spoiler';\nimport Wrapper from 'WikiComponents/TextArticle';\n\n    const frontMatter = {\n\twikiWrapper: 'TextArticle',\n\tpath: undefined\n};\n    const props = { };\n    const jsx = <div><p>Command : Nickname Substitution.\nFormat  : sub &lt;word&gt; &lt;meaning&gt;</p>\n<p>   Just as aliases let you give another name to actions, subs let\nyou give an alternate name to objects and everything else.  When you\nassign a meaning to a particular word, any use of that word will be\ntranslated to its new meaning.  For instance, if you</p>\n<p>   sub lite lightning</p>\n<p>then the following lines become</p>\n<p>   tell lite hello!            --&gt; tell lightning hello!\ngive sword to lite          --&gt; give sword to lightning\nsay lite up my life         --&gt; say lightning up my life</p>\n<p>Combined with aliases, subs could save a lot of keystrokes:</p>\n<p>   alias g get $1 from $2\nsub a all\nsub b bag\nsub c corpse</p>\n<p>   g a b      --&gt; get all from bag\ng a c      --&gt; get all from corpse</p>\n<p>Typing 'sub' alone without arguments will list all the subs\nyou have defined.  To remove a sub, use the 'unsub' command.\nYou can use up to 50 subs to redefine your favorite annoying\nwords, but you are not allowed to turn these words into subs:\nsub, unsub, alias, and unalias.</p>\n<p>   Nickname substitution only works on a word with spaces before and\nafter it.  Using the above example,</p>\n<p>   big b       --&gt; big bag\nbig -b      --&gt; big-b\n'hi lite!   --&gt; say hi lite!</p>\n<p>If you want to use a word literally but it has been subd, put a\nbackslash () in front of the word.</p>\n<p>   big \\b                   --&gt; big b\nsay \\lite up my life     --&gt; say lite up my life</p>\n<p>If you want to see the result of your input after aliases and subs\nhave been substituted, you can 'set expand on'.</p>\n<p>   Hint #1:  don't sub 'me' into your own name, it will make all\nof your spoken words sound like third person.</p>\n<p>   Hint #2:  if you're really strapped for aliases, subs can act\nas simply aliases that don't do argument substitutions.  For instance,</p>\n<p>   sub x look at</p>\n<p>   x dog         --&gt; look at dog</p>\n<p>But be warned that although you can sub a command, you can't make\na sub of an alias, because subs are substituted after the\naliases.</p>\n<p>   alias gafc get all from corpse\nsub g gafc</p>\n<p>   g              --&gt; gafc</p>\n<p>   Hint #3:  although subs only work when the word is separated\nby spaces, the 'tell' command has been designed to accept your\nsubs when you use multitell.</p>\n<p>   alias t tell\nsub l lightning\nsub n nightswimmer\nsub w windrunner</p>\n<p>   t l, n, w huba!   --&gt; tell lightning, nightswimmer, windrunner huba!</p>\n<p>   Hint #4:  you can also use the alias sub and unsub instead of using\nsub or unsub.  If you don't have it aliased, then you can type:</p>\n<p>   alias sub sub\nalias unsub unsub</p>\n<p>See also:  unsub, set, expand, alias</p></div>;\n    export default class MarkdownReact extends React.PureComponent {\n      render() {\n        const props = this.props;\n        return <Wrapper {...props} frontMatter={frontMatter}><div><p>Command : Nickname Substitution.\nFormat  : sub &lt;word&gt; &lt;meaning&gt;</p>\n<p>   Just as aliases let you give another name to actions, subs let\nyou give an alternate name to objects and everything else.  When you\nassign a meaning to a particular word, any use of that word will be\ntranslated to its new meaning.  For instance, if you</p>\n<p>   sub lite lightning</p>\n<p>then the following lines become</p>\n<p>   tell lite hello!            --&gt; tell lightning hello!\ngive sword to lite          --&gt; give sword to lightning\nsay lite up my life         --&gt; say lightning up my life</p>\n<p>Combined with aliases, subs could save a lot of keystrokes:</p>\n<p>   alias g get $1 from $2\nsub a all\nsub b bag\nsub c corpse</p>\n<p>   g a b      --&gt; get all from bag\ng a c      --&gt; get all from corpse</p>\n<p>Typing 'sub' alone without arguments will list all the subs\nyou have defined.  To remove a sub, use the 'unsub' command.\nYou can use up to 50 subs to redefine your favorite annoying\nwords, but you are not allowed to turn these words into subs:\nsub, unsub, alias, and unalias.</p>\n<p>   Nickname substitution only works on a word with spaces before and\nafter it.  Using the above example,</p>\n<p>   big b       --&gt; big bag\nbig -b      --&gt; big-b\n'hi lite!   --&gt; say hi lite!</p>\n<p>If you want to use a word literally but it has been subd, put a\nbackslash () in front of the word.</p>\n<p>   big \\b                   --&gt; big b\nsay \\lite up my life     --&gt; say lite up my life</p>\n<p>If you want to see the result of your input after aliases and subs\nhave been substituted, you can 'set expand on'.</p>\n<p>   Hint #1:  don't sub 'me' into your own name, it will make all\nof your spoken words sound like third person.</p>\n<p>   Hint #2:  if you're really strapped for aliases, subs can act\nas simply aliases that don't do argument substitutions.  For instance,</p>\n<p>   sub x look at</p>\n<p>   x dog         --&gt; look at dog</p>\n<p>But be warned that although you can sub a command, you can't make\na sub of an alias, because subs are substituted after the\naliases.</p>\n<p>   alias gafc get all from corpse\nsub g gafc</p>\n<p>   g              --&gt; gafc</p>\n<p>   Hint #3:  although subs only work when the word is separated\nby spaces, the 'tell' command has been designed to accept your\nsubs when you use multitell.</p>\n<p>   alias t tell\nsub l lightning\nsub n nightswimmer\nsub w windrunner</p>\n<p>   t l, n, w huba!   --&gt; tell lightning, nightswimmer, windrunner huba!</p>\n<p>   Hint #4:  you can also use the alias sub and unsub instead of using\nsub or unsub.  If you don't have it aliased, then you can type:</p>\n<p>   alias sub sub\nalias unsub unsub</p>\n<p>See also:  unsub, set, expand, alias</p></div></Wrapper>;\n      }\n    };\n    export { frontMatter, jsx };\n  ","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M5 18.08V19h.92l9.06-9.06-.92-.92z\",\n  opacity: \".3\"\n}), _react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06.92.92L5.92 19zM20.71 5.63l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41z\"\n})), 'CreateTwoTone');\n\nexports.default = _default;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CreateIcon from '@material-ui/icons/CreateTwoTone';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ArticleHeader from './ArticleHeader';\r\nimport styles from '../../styles/wiki';\r\n\r\n@withStyles(styles, { withTheme: true })\r\nclass TextArticle extends Component {\r\n  render() {\r\n    const { path, toggleWikiDrawer, wikiDrawerOpen, markdown, classes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <ArticleHeader \r\n          path={path} \r\n          markdown={markdown} \r\n          toggle={toggleWikiDrawer}\r\n          open={wikiDrawerOpen}\r\n        />\r\n        <Divider className={classes.sectionDivider}/>\r\n        <Typography variant=\"body1\" component=\"section\">\r\n          <pre className={classes.textSection}>\r\n            {this.props.children}\r\n          </pre>\r\n        </Typography>\r\n        <br/>\r\n        <Paper>\r\n          <Grid container spacing={16}>\r\n            <Grid item>\r\n              <CreateIcon className={classes.createIcon}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm>\r\n              <Typography variant=\"subtitle1\">\r\n                This article was written in plain text, most likely copied from the MUD.\r\n                You can help EotL by <Link to=\"/wiki/\">converting it</Link> to Markdown. \r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextArticle;\r\n"],"sourceRoot":""}