(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{420:function(e,a,t){"use strict";t.r(a),t.d(a,"default",function(){return m}),t.d(a,"frontMatter",function(){return u}),t.d(a,"jsx",function(){return h});var l=t(9),r=t(10),n=t(12),s=t(11),i=t(13),o=t(0),c=t.n(o),p=t(578),u={path:void 0},h=c.a.createElement("div",null,c.a.createElement("p",null,"COMMANDS:"),c.a.createElement("p",null,"  -p              -- Go to first page with unread articles. -p #            -- Go to page number #. -p <expression> -- Go to page containing <expression> or, if there is more than one, list all pages containing <expression>. -p list         -- List all pages that you are subscribed to. -p list new     -- List all pages you subscribe to that have new articles. -p list all     -- List all possible pages to subscribe to."),c.a.createElement("p",null,"  -h              -- Show the headlines of unread articles on current page. -h #            -- Show all headlines from 1 to # on current page. -h old          -- Show all headlines on current page."),c.a.createElement("p",null,"  -r              -- Begin reading all new articles on current page. -r #            -- Read article number # on current page. -r #,#, .. #    -- Read all those article you specify on current page."),c.a.createElement("p",null,"  -w              -- Write an article ON CURRENT PAGE. -w title        -- Write an article ON CURRENT PAGE with title 'title'. <SPOILER>       -- Insert spoiler space into an article.  This only applies the first time it appears in an article.  The <SPOILER> tag on a line by itself will make sure that there is more than a full screen of blank space in your message, so those who don't want to read spoilers can exit from the message."),c.a.createElement("p",null,"  -e #            -- ERASE ARTICLE NUMBER # ON CURRENT PAGE."),c.a.createElement("p",null,"  -m #            -- Mark all articles as read up to number # on current page. -m SUB          -- Mark all subscribed pages as read. -m SUB #        -- Mark all subscribed pages as read to article #. -m ALL          -- Mark all articles on all pages as read. -m ALL #        -- Mark all pages as read up through article #."),c.a.createElement("p",null,"  -s #            -- Subscribe to page number # (on the ']p list all' list). -s all          -- Subscribe to all possible pages."),c.a.createElement("p",null,"  -c #            -- Cancel subscription to page number # (']p list' list). -c !            -- Cancel current news page. -c all          -- Cancel all subscriptions (?!)."),c.a.createElement("p",null,"  -b <player>     -- Read last post by <player> already read on current page. -b <player> all -- Read all posts by <player> on current page. -b <player> #   -- Read all posts by <player> from number # on current page."),c.a.createElement("p",null,"  -x # file       -- Xerox article number # on current page to ~/file. (Frob+)"),c.a.createElement("p",null,"  -create Title   -- Create 'The Title Page' (Arch+, duh). -hose Title     -- Hose 'The Title Page' (Arch+, duh). -mod Title      -- Modify settings for 'The Title Page' (Arch+, duh). -move Title #   -- Move 'The Title Page' in the list (Arch+, duh). -stat           -- List the settings for your current page (Frob+). -stat Title     -- List the settings for 'The Titled Page' page (Frob+). -stat all       -- List the settings for all news pages (Frob+)."),c.a.createElement("p",null,"NOTE:"),c.a.createElement("p",null,"  In all cases where the ",c.a.createElement("code",null,"-' character is used, you could also use"),"]' or `news '.  This is so that all keyboard types are supported.")),m=function(e){function a(){return Object(l.a)(this,a),Object(n.a)(this,Object(s.a)(a).apply(this,arguments))}return Object(i.a)(a,e),Object(r.a)(a,[{key:"render",value:function(){var e=this.props;return c.a.createElement(p.a,Object.assign({},e,{frontMatter:u}),c.a.createElement("div",null,c.a.createElement("p",null,"COMMANDS:"),c.a.createElement("p",null,"  -p              -- Go to first page with unread articles. -p #            -- Go to page number #. -p <expression> -- Go to page containing <expression> or, if there is more than one, list all pages containing <expression>. -p list         -- List all pages that you are subscribed to. -p list new     -- List all pages you subscribe to that have new articles. -p list all     -- List all possible pages to subscribe to."),c.a.createElement("p",null,"  -h              -- Show the headlines of unread articles on current page. -h #            -- Show all headlines from 1 to # on current page. -h old          -- Show all headlines on current page."),c.a.createElement("p",null,"  -r              -- Begin reading all new articles on current page. -r #            -- Read article number # on current page. -r #,#, .. #    -- Read all those article you specify on current page."),c.a.createElement("p",null,"  -w              -- Write an article ON CURRENT PAGE. -w title        -- Write an article ON CURRENT PAGE with title 'title'. <SPOILER>       -- Insert spoiler space into an article.  This only applies the first time it appears in an article.  The <SPOILER> tag on a line by itself will make sure that there is more than a full screen of blank space in your message, so those who don't want to read spoilers can exit from the message."),c.a.createElement("p",null,"  -e #            -- ERASE ARTICLE NUMBER # ON CURRENT PAGE."),c.a.createElement("p",null,"  -m #            -- Mark all articles as read up to number # on current page. -m SUB          -- Mark all subscribed pages as read. -m SUB #        -- Mark all subscribed pages as read to article #. -m ALL          -- Mark all articles on all pages as read. -m ALL #        -- Mark all pages as read up through article #."),c.a.createElement("p",null,"  -s #            -- Subscribe to page number # (on the ']p list all' list). -s all          -- Subscribe to all possible pages."),c.a.createElement("p",null,"  -c #            -- Cancel subscription to page number # (']p list' list). -c !            -- Cancel current news page. -c all          -- Cancel all subscriptions (?!)."),c.a.createElement("p",null,"  -b <player>     -- Read last post by <player> already read on current page. -b <player> all -- Read all posts by <player> on current page. -b <player> #   -- Read all posts by <player> from number # on current page."),c.a.createElement("p",null,"  -x # file       -- Xerox article number # on current page to ~/file. (Frob+)"),c.a.createElement("p",null,"  -create Title   -- Create 'The Title Page' (Arch+, duh). -hose Title     -- Hose 'The Title Page' (Arch+, duh). -mod Title      -- Modify settings for 'The Title Page' (Arch+, duh). -move Title #   -- Move 'The Title Page' in the list (Arch+, duh). -stat           -- List the settings for your current page (Frob+). -stat Title     -- List the settings for 'The Titled Page' page (Frob+). -stat all       -- List the settings for all news pages (Frob+)."),c.a.createElement("p",null,"NOTE:"),c.a.createElement("p",null,"  In all cases where the ",c.a.createElement("code",null,"-' character is used, you could also use"),"]' or `news '.  This is so that all keyboard types are supported.")))}}]),a}(c.a.PureComponent)},576:function(e,a,t){"use strict";var l=t(27);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var r=l(t(0)),n=(0,l(t(29)).default)(r.default.createElement(r.default.Fragment,null,r.default.createElement("path",{fill:"none",d:"M0 0h24v24H0V0z"}),r.default.createElement("path",{d:"M5 18.08V19h.92l9.06-9.06-.92-.92z",opacity:".3"}),r.default.createElement("path",{d:"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06.92.92L5.92 19zM20.71 5.63l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41z"})),"CreateTwoTone");a.default=n},578:function(e,a,t){"use strict";var l,r=t(9),n=t(10),s=t(12),i=t(11),o=t(13),c=t(0),p=t.n(c),u=t(579),h=t(20),m=t.n(h),d=t(44),g=t.n(d),b=t(34),E=t.n(b),f=t(33),y=t.n(f),w=t(576),T=t.n(w),R=t(8),L=t(99),M=t(30),O=Object(R.withStyles)(M.a,{withTheme:!0})(l=function(e){function a(){return Object(r.a)(this,a),Object(s.a)(this,Object(i.a)(a).apply(this,arguments))}return Object(o.a)(a,e),Object(n.a)(a,[{key:"render",value:function(){var e=this.props,a=e.path,t=e.toggleWikiDrawer,l=e.wikiDrawerOpen,r=e.markdown,n=e.classes;return p.a.createElement("div",null,p.a.createElement(L.a,{path:a,markdown:r,toggle:t,open:l}),p.a.createElement(y.a,{className:n.sectionDivider}),p.a.createElement(m.a,{variant:"body1",component:"section"},p.a.createElement("pre",{className:n.textSection},this.props.children)),p.a.createElement("br",null),p.a.createElement(E.a,null,p.a.createElement(g.a,{container:!0,spacing:16},p.a.createElement(g.a,{item:!0},p.a.createElement(T.a,{className:n.createIcon})),p.a.createElement(g.a,{item:!0,xs:12,sm:!0},p.a.createElement(m.a,{variant:"subtitle1"},"This article was written in plain text, most likely copied from the MUD. You can help EotL by ",p.a.createElement(u.a,{to:"/wiki/"},"converting it")," to Markdown.")))))}}]),a}(c.Component))||l;a.a=O}}]);
//# sourceMappingURL=59.12d3a318.chunk.js.map