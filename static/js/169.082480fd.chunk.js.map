{"version":3,"sources":["js/components/wiki/TableOfContents.js","md/wiki/index.md"],"names":["TableOfContents","withStyles","styles","withTheme","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","toggleContents","bind","assertThisInitialized","setState","objectSpread","contents","_this2","classes","react_default","a","createElement","Typography_default","variant","component","map","item","index","key","href","slug","className","plainLink","text","renderContents","children","_this$props","path","markdown","depth","headers","getHeaders","length","Paper_default","tocPaper","classNames","tocHeaderOpen","tocHide","onClick","tableOfContents","hide","Component","frontMatter","wikiWrapper","wikiComponents","muiIcons","title","description","see","undefined","jsx","target","rel","wiki_TableOfContents","assign","id","Link","to","RemoveRedEye_default","MarkdownReact","IndexArticle","React","PureComponent"],"mappings":"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","file":"static/js/169.082480fd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { getHeaders } from '../../helpers/wikiHelper';\r\nimport styles from '../../styles/wiki';\r\n\r\n@withStyles(styles, { withTheme: true })\r\nclass TableOfContents extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: true\r\n    };\r\n    this.toggleContents = this.toggleContents.bind(this);\r\n  }\r\n\r\n  toggleContents() {\r\n    this.setState({ ...this.state, open: !this.state.open });\r\n  }\r\n\r\n  renderContents(contents,) {\r\n    const { classes } = this.props;\r\n    if (!contents) {\r\n      return '';\r\n    }\r\n    return (\r\n      <Typography variant=\"body1\" component=\"ol\">\r\n        { contents.map((item, index) => {\r\n          return (\r\n            <li key={index}>\r\n              <a href={'#' + item.slug} className={classes.plainLink}>\r\n                {item.text}\r\n              </a>\r\n              {this.renderContents(item.children)}\r\n            </li>\r\n          );\r\n        })}\r\n      </Typography>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { path, markdown, depth, classes } = this.props;\r\n\r\n    const headers = getHeaders(markdown, path, depth);\r\n    if (headers.length > 0) {\r\n      return (\r\n        <Paper component='div' className={classes.tocPaper}>\r\n          <Typography variant=\"body2\" component=\"div\" className={classNames(this.state.open && classes.tocHeaderOpen)}>\r\n            Contents&nbsp;[\r\n              <button \r\n                className={classes.tocHide} \r\n                onClick={this.toggleContents}>\r\n                {this.state.open ? 'hide' : 'show'}\r\n              </button>]\r\n          </Typography>\r\n          <div className={classNames(classes.tableOfContents, \r\n                          !this.state.open && classes.hide)}>\r\n            {this.renderContents(headers)}\r\n          </div>\r\n        </Paper>\r\n      );\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n\r\nexport default TableOfContents;\r\n","\n    /*---\nwikiWrapper: IndexArticle\nwikiComponents: \n  - TableOfContents\nmuiIcons:\n  - RemoveRedEye\ntitle: EotL Wiki\ndescription: EotL wiki overview.\nsee:\n  - MUDs\n  - Getting Started\n---*/\n    import React from 'react';\n    import { Link } from 'react-router-dom';\nimport Spoiler from 'Containers/Spoiler';\nimport TableOfContents from 'WikiComponents/TableOfContents';\nimport RemoveRedEye from '@material-ui/icons/RemoveRedEye';\nimport Wrapper from 'WikiComponents/IndexArticle';\n\n    const frontMatter = {\n\twikiWrapper: 'IndexArticle',\n\twikiComponents: [\n\t\t'TableOfContents'\n\t],\n\tmuiIcons: [\n\t\t'RemoveRedEye'\n\t],\n\ttitle: 'EotL Wiki',\n\tdescription: 'EotL wiki overview.',\n\tsee: [\n\t\t'MUDs',\n\t\t'Getting Started'\n\t],\n\tpath: undefined\n};\n    const props = { };\n    const jsx = <div><p>It's a dangerous world out there, but this wiki should supply you all the critical information you need to survive your adventure on EotL. To contribute, you can mudmail Devo with your content suggestions, or go right to the source by requesting access to the <a href=\"https://github.com/eotl/wiki\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github repository</a>. </p>\n<TableOfContents {...props} depth={2} />\n<p>Articles are organized into a folder structure which is reflected as \"categories\" while browsing the wiki. If you browse to or search for a category page, the index.md file in that folder will be displayed. Categories without an index article will show a blank page using the IndexArticle wrapper, which includes sections for member articles and subcategories, such as the page you're viewing right now.</p>\n<p>The remainder of this document will describe how to write the articles themselves.</p>\n<h3 id=\"markdown\">Markdown</h3>\n<p>The wiki is written in Markdown with additional support for harnessing content from EotL's web component library. If you need help getting started with Markdown syntax, check out this <a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">cheatsheet</a>. The rest of this document will assume you're familiar with the basics. The source code for this document can be viewed on <a href=\"https://raw.githubusercontent.com/eotl/wiki/master/index.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a>.</p>\n<h3 id=\"links\">Links</h3>\n<p>There are a few different ways to specify links in your article content. For external links such as the ones displayed above, the standard Markdown link syntax is sufficient. </p>\n<p>For internal links, you will want to use the &lt;Link/&gt; tag instead of the standard Markdown links to render the new content internally instead of performing a full page refresh. This method uses the special JSX interpolation syntax with the tag enclosed in double braces, such as <Link to=\"/\">this home page link</Link>. By default, the &lt;Link/&gt; component will be imported on all wiki pages.</p>\n<p>You can also link directly to other wiki articles by using the double bracket syntax, such as this link to <Link className=\"internal\" to=\"/wiki/locations/eternal_city\">Eternal City</Link>, or this other one with <Link className=\"internal\" to=\"/wiki/locations/eternal_city\">alternate link text</Link>. The target inside the double brackets will be matched against the article's <em>filename</em>, not its title, with the value lowercased and its spaces converted to underscores.</p>\n<h3 id=\"spoilers\">Spoilers</h3>\n<p>The wiki spoiler system allows you to mark certain content as containing spoilers for EotL gameplay. There are four possible spoiler levels that denote what kind of player would be expected to know the spoiler: newbie, regular, veteran, and wizard. Users can configure what level of spoilers they wish to see using the <RemoveRedEye/> Spoiler Menu.</p>\n<p>To mark content as having spoilers, simple surround the content with &lt;Spoiler&gt;&lt;Spoiler/&gt; tags. The Spoiler tag must be passed a <em>level</em> attribute, denoting the spoiler level of the content. You may also set the optional <em>placeholder</em> attribute which will display some informational text in place of the spoiler. You may either provide custom text to display, or set to true to use the default placeholder text.</p>\n<p>In addition to spoiler blocks with an article, you may also set the spoiler level of the entire article via the <em>spoilerLevel</em> front matter. This should be set to one of the four spoiler levels and, in addtion to wrapping the entire article in a &lt;Spoiler/&gt; tag, it will also prevet the article from showing up in search and navigation.</p>\n<h3 id=\"front-matter\">Front Matter</h3>\n<p>Front matter is a special data section at the top of your wiki article specified in <a href=\"http://yaml.org/start.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">YAML syntax</a> which you can include to specify how you want your page to be rendered.</p>\n<h4 id=\"title\">title</h4>\n<p>The title value specifies the page title to be displayed in headers and in navigational elements like links and buttons. If you don't set a title, one will be calculated based on the article's file name.</p>\n<h4 id=\"description\">description</h4>\n<p>The description value is a short phrase or sentence which describes the article content, and often appears with the title as a caption or subtitle. If no description is provided, the default behavior is to display nothing where a description would normally appear. However, based on the page type, a default description may be generated. For instance, category indexes will get a default description which consists of their subcategories and articles.</p>\n<h4 id=\"spoilerlevel\">spoilerLevel</h4>\n<p>Set the article spoiler level, which will cause placeholder text to be displayed instead of the article body if the user's spoiler level is not set sufficently high. It will also cause the article to be removed from search and navigation.</p>\n<h4 id=\"see\">see</h4>\n<p>The see value lists which articles to link to in this article's \"See also\" section. The list values will be matched against an article's <em>filename</em>, not its title, with the value lowercased and spaces its spaces converted to underscores.</p>\n<h4 id=\"wikiwrapper\">wikiWrapper</h4>\n<p>The wikiWrapper value is a JavaScript component which will enclose your page content. Depending on which wrapper you specify, your page may automatically get special content like navigational elements or dynamically generated subsections. If you don't specify a wrapper, your document will be displayed as-is.</p>\n<p>Different wrapper components can be used for different types of articles to automatically generate surrounding content, such as headers, footers, and sidebars. While you can entirely forgo specifying a wrapper and format the entire article yourself, it's recommended to share wrappers across articles that have the same format for the sake of uniformity and ease of maintenance. </p>\n<h5 id=\"basicarticle\">BasicArticle</h5>\n<p>The basic article wrapper contains the standard header and a \"See also\" section for any articles specified in the 'see' front matter. It also supplies breadcrumbs and a sidebar for browsing the article tree.</p>\n<h5 id=\"indexarticle\">IndexArticle</h5>\n<p>Used for category indexes, index articles are like basic articles but also contain sections for subcategory and member article lists.</p>\n<h5 id=\"textarticle\">TextArticle</h5>\n<p>Text articles are written in plain text and displayed in monospace. Most of these articles were ported over from the MUD and need to be re-written in Markdown.</p>\n<h5 id=\"stubarticle\">StubArticle</h5>\n<p>Article stubs are placeholders for future articles. If you're looking to contribute, expanding the stubs is a good place to start.</p>\n<h4 id=\"wikicomponents\">wikiComponents</h4>\n<p>In addition to wrapper components, you may import other smaller components you can embed in the body of your article. If you find yourself using the same patterns over and over again across different wiki pages, it may be useful to converting them to components.</p>\n<h5 id=\"tableofcontents\">TableOfContents</h5>\n<p>The table of contents component will scan the headings in your document and generate a table of contents which has jump links to the different sections. The table of contents component takes an optional parameter 'depth' to specify how many levels deep your want your table of contents to be.</p>\n<h4 id=\"muicomponents\">muiComponents</h4>\n<p>The EotL website uses the Material UI framework to lay out components, configure typeset, and build user interactions. While the entire framework is quite extensive, there are a few common components you may find useful in your pages.</p>\n<h5 id=\"paper\">Paper</h5>\n<p>The Paper component displays your content on an elevated sheet of \"paper\" to make it stand out against the surrounding content. The table of contents component on this page and the footer links below are examples of it in use. See the <a href=\"https://material-ui.com/demos/paper/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Material UI website</a> for a longer explanation.</p>\n<h5 id=\"grid\">Grid</h5>\n<p>The Grid component allows you to lay out components side-by-side, in a grid configuration. Each item should be surrounded by &lt;Grid item&gt;&lt;/Grid&gt; tags, and the entire grid should be surrounded by a &lt;Grid container&gt;&lt;/Grid&gt; tag. See the <a href=\"https://material-ui.com/layout/grid/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Material UI website</a> for a longer explanation.</p>\n<h4 id=\"muiicons\">muiIcons</h4>\n<p>The muiIcons value lets you import Material UI icons for display on your page. You can view the available icon set on <a href=\"https://material.io/tools/icons/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">their website</a>.</p></div>;\n    export default class MarkdownReact extends React.PureComponent {\n      render() {\n        const props = this.props;\n        return <Wrapper {...props} frontMatter={frontMatter}><div><p>It's a dangerous world out there, but this wiki should supply you all the critical information you need to survive your adventure on EotL. To contribute, you can mudmail Devo with your content suggestions, or go right to the source by requesting access to the <a href=\"https://github.com/eotl/wiki\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github repository</a>. </p>\n<TableOfContents {...props} depth={2} />\n<p>Articles are organized into a folder structure which is reflected as \"categories\" while browsing the wiki. If you browse to or search for a category page, the index.md file in that folder will be displayed. Categories without an index article will show a blank page using the IndexArticle wrapper, which includes sections for member articles and subcategories, such as the page you're viewing right now.</p>\n<p>The remainder of this document will describe how to write the articles themselves.</p>\n<h3 id=\"markdown\">Markdown</h3>\n<p>The wiki is written in Markdown with additional support for harnessing content from EotL's web component library. If you need help getting started with Markdown syntax, check out this <a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">cheatsheet</a>. The rest of this document will assume you're familiar with the basics. The source code for this document can be viewed on <a href=\"https://raw.githubusercontent.com/eotl/wiki/master/index.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a>.</p>\n<h3 id=\"links\">Links</h3>\n<p>There are a few different ways to specify links in your article content. For external links such as the ones displayed above, the standard Markdown link syntax is sufficient. </p>\n<p>For internal links, you will want to use the &lt;Link/&gt; tag instead of the standard Markdown links to render the new content internally instead of performing a full page refresh. This method uses the special JSX interpolation syntax with the tag enclosed in double braces, such as <Link to=\"/\">this home page link</Link>. By default, the &lt;Link/&gt; component will be imported on all wiki pages.</p>\n<p>You can also link directly to other wiki articles by using the double bracket syntax, such as this link to <Link className=\"internal\" to=\"/wiki/locations/eternal_city\">Eternal City</Link>, or this other one with <Link className=\"internal\" to=\"/wiki/locations/eternal_city\">alternate link text</Link>. The target inside the double brackets will be matched against the article's <em>filename</em>, not its title, with the value lowercased and its spaces converted to underscores.</p>\n<h3 id=\"spoilers\">Spoilers</h3>\n<p>The wiki spoiler system allows you to mark certain content as containing spoilers for EotL gameplay. There are four possible spoiler levels that denote what kind of player would be expected to know the spoiler: newbie, regular, veteran, and wizard. Users can configure what level of spoilers they wish to see using the <RemoveRedEye/> Spoiler Menu.</p>\n<p>To mark content as having spoilers, simple surround the content with &lt;Spoiler&gt;&lt;Spoiler/&gt; tags. The Spoiler tag must be passed a <em>level</em> attribute, denoting the spoiler level of the content. You may also set the optional <em>placeholder</em> attribute which will display some informational text in place of the spoiler. You may either provide custom text to display, or set to true to use the default placeholder text.</p>\n<p>In addition to spoiler blocks with an article, you may also set the spoiler level of the entire article via the <em>spoilerLevel</em> front matter. This should be set to one of the four spoiler levels and, in addtion to wrapping the entire article in a &lt;Spoiler/&gt; tag, it will also prevet the article from showing up in search and navigation.</p>\n<h3 id=\"front-matter\">Front Matter</h3>\n<p>Front matter is a special data section at the top of your wiki article specified in <a href=\"http://yaml.org/start.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">YAML syntax</a> which you can include to specify how you want your page to be rendered.</p>\n<h4 id=\"title\">title</h4>\n<p>The title value specifies the page title to be displayed in headers and in navigational elements like links and buttons. If you don't set a title, one will be calculated based on the article's file name.</p>\n<h4 id=\"description\">description</h4>\n<p>The description value is a short phrase or sentence which describes the article content, and often appears with the title as a caption or subtitle. If no description is provided, the default behavior is to display nothing where a description would normally appear. However, based on the page type, a default description may be generated. For instance, category indexes will get a default description which consists of their subcategories and articles.</p>\n<h4 id=\"spoilerlevel\">spoilerLevel</h4>\n<p>Set the article spoiler level, which will cause placeholder text to be displayed instead of the article body if the user's spoiler level is not set sufficently high. It will also cause the article to be removed from search and navigation.</p>\n<h4 id=\"see\">see</h4>\n<p>The see value lists which articles to link to in this article's \"See also\" section. The list values will be matched against an article's <em>filename</em>, not its title, with the value lowercased and spaces its spaces converted to underscores.</p>\n<h4 id=\"wikiwrapper\">wikiWrapper</h4>\n<p>The wikiWrapper value is a JavaScript component which will enclose your page content. Depending on which wrapper you specify, your page may automatically get special content like navigational elements or dynamically generated subsections. If you don't specify a wrapper, your document will be displayed as-is.</p>\n<p>Different wrapper components can be used for different types of articles to automatically generate surrounding content, such as headers, footers, and sidebars. While you can entirely forgo specifying a wrapper and format the entire article yourself, it's recommended to share wrappers across articles that have the same format for the sake of uniformity and ease of maintenance. </p>\n<h5 id=\"basicarticle\">BasicArticle</h5>\n<p>The basic article wrapper contains the standard header and a \"See also\" section for any articles specified in the 'see' front matter. It also supplies breadcrumbs and a sidebar for browsing the article tree.</p>\n<h5 id=\"indexarticle\">IndexArticle</h5>\n<p>Used for category indexes, index articles are like basic articles but also contain sections for subcategory and member article lists.</p>\n<h5 id=\"textarticle\">TextArticle</h5>\n<p>Text articles are written in plain text and displayed in monospace. Most of these articles were ported over from the MUD and need to be re-written in Markdown.</p>\n<h5 id=\"stubarticle\">StubArticle</h5>\n<p>Article stubs are placeholders for future articles. If you're looking to contribute, expanding the stubs is a good place to start.</p>\n<h4 id=\"wikicomponents\">wikiComponents</h4>\n<p>In addition to wrapper components, you may import other smaller components you can embed in the body of your article. If you find yourself using the same patterns over and over again across different wiki pages, it may be useful to converting them to components.</p>\n<h5 id=\"tableofcontents\">TableOfContents</h5>\n<p>The table of contents component will scan the headings in your document and generate a table of contents which has jump links to the different sections. The table of contents component takes an optional parameter 'depth' to specify how many levels deep your want your table of contents to be.</p>\n<h4 id=\"muicomponents\">muiComponents</h4>\n<p>The EotL website uses the Material UI framework to lay out components, configure typeset, and build user interactions. While the entire framework is quite extensive, there are a few common components you may find useful in your pages.</p>\n<h5 id=\"paper\">Paper</h5>\n<p>The Paper component displays your content on an elevated sheet of \"paper\" to make it stand out against the surrounding content. The table of contents component on this page and the footer links below are examples of it in use. See the <a href=\"https://material-ui.com/demos/paper/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Material UI website</a> for a longer explanation.</p>\n<h5 id=\"grid\">Grid</h5>\n<p>The Grid component allows you to lay out components side-by-side, in a grid configuration. Each item should be surrounded by &lt;Grid item&gt;&lt;/Grid&gt; tags, and the entire grid should be surrounded by a &lt;Grid container&gt;&lt;/Grid&gt; tag. See the <a href=\"https://material-ui.com/layout/grid/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Material UI website</a> for a longer explanation.</p>\n<h4 id=\"muiicons\">muiIcons</h4>\n<p>The muiIcons value lets you import Material UI icons for display on your page. You can view the available icon set on <a href=\"https://material.io/tools/icons/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">their website</a>.</p></div></Wrapper>;\n      }\n    };\n    export { frontMatter, jsx };\n  "],"sourceRoot":""}